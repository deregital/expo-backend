name: Deploy PR to DigitalOcean

on:
  pull_request:
    branches: [dev]

permissions:
  contents: read
  packages: write

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:pr-${{ github.event.pull_request.number }}

      - name: Trigger deploy to DigitalOcean
        env:
          DO_API_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
          APP_ID: ${{ secrets.DIGITALOCEAN_DEV_APP_ID }}
          IMAGE: ghcr.io/${{ github.repository }}:pr-${{ github.event.pull_request.number }}
        run: |
          # Obtener la app completa
          curl -s -X GET \
            -H "Authorization: Bearer $DO_API_TOKEN" \
            "https://api.digitalocean.com/v2/apps/$APP_ID" > app.json

          # Modificar solo el tag de la imagen del primer servicio y mantener el spec limpio
          jq --arg img "$IMAGE" '
            { spec: (.app.spec | .services[0].image = { registry_type: "DOCKER", registry: "ghcr.io", repository: ($img | split(":")[0] | split("/") | .[2:] | join("/")), tag: ($img | split(":")[1]) }) }
          ' app.json > new_spec.json

          # Hacer el PUT con el JSON correcto
          curl -X PUT \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $DO_API_TOKEN" \
            -d @new_spec.json \
            "https://api.digitalocean.com/v2/apps/$APP_ID"
